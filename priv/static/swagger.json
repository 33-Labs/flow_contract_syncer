{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Contract": {
      "description": "A contract on the network",
      "example": {
        "address": "0x0b2a3299cc857e29",
        "code": "...",
        "dependants": [
          "A.c1e4f4f4c4257510.TopShotMarketV3"
        ],
        "dependencies": [
          "A.1d7e57aa55817448.MetadataViews"
        ],
        "name": "TopShot",
        "uuid": "A.0b2a3299cc857e29.TopShot"
      },
      "properties": {
        "address": {
          "description": "Contract address",
          "type": "string"
        },
        "code": {
          "description": "Contract code",
          "type": "string"
        },
        "dependants_count": {
          "description": "The number of contracts which import this contract",
          "type": "integer"
        },
        "dependencies_count": {
          "description": "The number of contracts imported by this contract",
          "type": "integer"
        },
        "events": {
          "description": "The events in the contract",
          "type": "array"
        },
        "name": {
          "description": "Contract name",
          "type": "string"
        },
        "uuid": {
          "description": "Contract uuid",
          "type": "string"
        }
      },
      "required": [
        "events",
        "dependants_count",
        "dependencies_count",
        "code",
        "name",
        "address",
        "uuid"
      ],
      "title": "Contract",
      "type": "object"
    },
    "ContractResp": {
      "description": "Contract resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/Contract"
        }
      },
      "required": [
        "code"
      ],
      "title": "ContractResp",
      "type": "object"
    },
    "Deployment": {
      "description": "Deployment",
      "example": {
        "block_height": 23227064,
        "block_timestamp": "2022-01-25T22:34:48.000000",
        "tx_id": "4a03653ecdb5d8fdf11c9f5a967fa126dba725da11a4d87a5fb805478b23e5ee",
        "type": "added"
      },
      "properties": {
        "block_height": {
          "description": "Block height of the deployment",
          "type": "integer"
        },
        "block_timestamp": {
          "description": "Block timestamp of the deployment",
          "type": "string"
        },
        "tx_id": {
          "description": "Transaction hash of the deployment",
          "type": "string"
        },
        "type": {
          "description": "Contract event type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "tx_id",
        "block_timestamp",
        "block_height"
      ],
      "title": "Deployment",
      "type": "object"
    },
    "Deployments": {
      "description": "A collection of Deployment",
      "items": {
        "$ref": "#/definitions/Deployment"
      },
      "title": "Deployments",
      "type": "array"
    },
    "DeploymentsData": {
      "description": "Deployments data",
      "properties": {
        "deployments": {
          "$ref": "#/definitions/Deployments"
        },
        "total_deployments_count": {
          "description": "snippets count",
          "type": "integer"
        }
      },
      "required": [
        "total_deployments_count"
      ],
      "title": "DeploymentsData",
      "type": "object"
    },
    "DeploymentsResp": {
      "description": "Deployments resp",
      "properties": {
        "code": {
          "description": "Status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/DeploymentsData"
        }
      },
      "required": [
        "code"
      ],
      "title": "DeploymentsResp",
      "type": "object"
    },
    "ErrorResp": {
      "example": {
        "code": 100,
        "message": "unsupported"
      },
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "message",
        "code"
      ],
      "type": "object"
    },
    "PartialContract": {
      "description": "Basic info of a contract on the network",
      "example": {
        "dependants_count": 10,
        "dependencies_count": 10,
        "uuid": "A.0b2a3299cc857e29.TopShot"
      },
      "properties": {
        "dependants_count": {
          "description": "The amount of contracts which import this contract",
          "type": "integer"
        },
        "dependencies_count": {
          "description": "The amount of contracts imported by this contract",
          "type": "integer"
        },
        "uuid": {
          "description": "Contract uuid",
          "type": "string"
        }
      },
      "required": [
        "dependants_count",
        "dependencies_count",
        "uuid"
      ],
      "type": "object"
    },
    "PartialContracts": {
      "description": "A collection of PartialContract",
      "items": {
        "$ref": "#/definitions/PartialContract"
      },
      "title": "PartialContracts",
      "type": "array"
    },
    "PartialContractsData": {
      "description": "PartialContracts data",
      "properties": {
        "contracts": {
          "$ref": "#/definitions/PartialContracts"
        },
        "total_contracts_count": {
          "description": "contracts count",
          "type": "integer"
        }
      },
      "required": [
        "total_contracts_count"
      ],
      "title": "PartialContractsData",
      "type": "object"
    },
    "PartialContractsResp": {
      "description": "PartialContracts resp",
      "properties": {
        "code": {
          "description": "Status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/PartialContractsData"
        }
      },
      "required": [
        "code"
      ],
      "title": "PartialContractsResp",
      "type": "object"
    },
    "Snippet": {
      "description": "Snippet",
      "example": {
        "code": "pub event TokensDeposited(amount: UFix64, to: Address?)",
        "code_hash": "DFFEFBF8AEBB86680E0EBABAF266F45B68A28188E3E17E81882465A910F1D80A",
        "contracts_count": 160,
        "type": "event"
      },
      "properties": {
        "code": {
          "description": "Snippet code",
          "type": "string"
        },
        "code_hash": {
          "description": "Snippet code hash",
          "type": "string"
        },
        "contracts_count": {
          "description": "Contracts using this snippet",
          "type": "integer"
        },
        "type": {
          "description": "Snippet type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "contracts_count",
        "code_hash",
        "code"
      ],
      "title": "Snippet",
      "type": "object"
    },
    "SnippetResp": {
      "description": "Snippet resp",
      "properties": {
        "code": {
          "description": "Status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/Snippet"
        }
      },
      "required": [
        "code"
      ],
      "title": "SnippetResp",
      "type": "object"
    },
    "Snippets": {
      "description": "A collection of Snippet",
      "items": {
        "$ref": "#/definitions/Snippet"
      },
      "title": "Snippets",
      "type": "array"
    },
    "SnippetsData": {
      "description": "Snippets data",
      "properties": {
        "snippets": {
          "$ref": "#/definitions/Snippets"
        },
        "total_snippets_count": {
          "description": "snippets count",
          "type": "integer"
        }
      },
      "required": [
        "total_snippets_count"
      ],
      "title": "SnippetsData",
      "type": "object"
    },
    "SnippetsResp": {
      "description": "Snippets resp",
      "properties": {
        "code": {
          "description": "Status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/SnippetsData"
        }
      },
      "required": [
        "code"
      ],
      "title": "SnippetsResp",
      "type": "object"
    },
    "Status": {
      "description": "Network status",
      "example": {
        "contract_amount": 2437,
        "last_sync_at": "2022-12-05T02:54:46",
        "network": "mainnet",
        "synced_height": 42168691
      },
      "properties": {
        "contract_amount": {
          "description": "Contracts amount synced",
          "type": "integer"
        },
        "last_sync_at": {
          "description": "Last time of contract syncing",
          "type": "datetime"
        },
        "network": {
          "description": "Network name",
          "type": "string"
        },
        "synced_height": {
          "description": "The block height synced",
          "type": "integer"
        }
      },
      "required": [
        "synced_height",
        "network",
        "last_sync_at",
        "contract_amount"
      ],
      "title": "Status",
      "type": "object"
    },
    "StatusResp": {
      "description": "Status resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/Status"
        }
      },
      "required": [
        "code"
      ],
      "title": "StatusResp",
      "type": "object"
    },
    "UUIDs": {
      "example": {
        "dependencies": [
          "A.f233dcee88fe0abe.FungibleToken",
          "A.1d7e57aa55817448.NonFungibleToken"
        ],
        "total_dependencies_count": 2,
        "uuid": "A.1d7e57aa55817448.MetadataViews"
      },
      "properties": {
        "dependencies": {
          "description": "Dependencies list",
          "type": "string"
        },
        "total_dependencies_count": {
          "description": "Dependencies count",
          "type": "integer"
        },
        "uuid": {
          "description": "Contract uuid",
          "type": "string"
        }
      },
      "required": [
        "uuid",
        "total_dependencies_count",
        "dependencies"
      ],
      "type": "object"
    },
    "UUIDsResp": {
      "description": "UUIDs resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/UUIDs"
        }
      },
      "required": [
        "code"
      ],
      "title": "UUIDsResp",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "contact": {
      "email": "lanford33@outlook.com",
      "name": "lanford33"
    },
    "description": "API Documentation for FlowContractSyncer",
    "termsOfService": "Open for public",
    "title": "FlowContractSyncer API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/contracts": {
      "get": {
        "description": "",
        "operationId": "query_contracts",
        "parameters": [
          {
            "description": "The owner of contracts",
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "string"
          },
          {
            "default": "inserted_at",
            "description": "Should be one of inserted_at, dependants_count, dependencies_count, default is inserted_at",
            "enum": [
              "inserted_at",
              "dependencies_count",
              "dependants_count"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Ascend or descend",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "order_by_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contracts",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/contracts/search": {
      "get": {
        "description": "",
        "operationId": "search_contract",
        "parameters": [
          {
            "description": "Keyword for searching, case-sensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search scope, should be \"code\" or \"uuid\" or \"uuid,code\". Default is \"uuid,code\". NOTE: Search in code is a bit slower than search in uuid",
            "in": "query",
            "name": "scope",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search contracts, order by dependants count desc",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v1/contracts/{uuid}": {
      "get": {
        "description": "",
        "operationId": "query_contract",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should sync the latest version from the blockchain before showing the contract",
            "in": "query",
            "name": "sync",
            "required": false,
            "type": "bool"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query for specific contract",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/contracts/{uuid}/dependants": {
      "get": {
        "description": "",
        "operationId": "query_contract_dependants",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "default": "address",
            "description": "Should be one of address, name, dependants_count, default is dependants_count",
            "enum": [
              "address",
              "name",
              "dependants_count"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Ascend or descend",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "order_by_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UUIDsResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contract dependants",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/contracts/{uuid}/dependencies": {
      "get": {
        "description": "",
        "operationId": "query_contract_dependencies",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "default": "address",
            "description": "Should be one of address, name, dependants_count, default is dependants_count",
            "enum": [
              "address",
              "name",
              "dependants_count"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Ascend or descend",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "order_by_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UUIDsResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contract dependencies",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/contracts/{uuid}/deployments": {
      "get": {
        "description": "",
        "operationId": "query_contract_deployments",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentsResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contract deployments",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/contracts/{uuid}/snippets": {
      "get": {
        "description": "",
        "operationId": "query_contract_sinppets",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "default": "all",
            "description": "Snippet type",
            "enum": [
              "resource",
              "struct",
              "interface",
              "function",
              "enum",
              "event",
              "all"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnippetsResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contract snippets",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/snippets/search": {
      "get": {
        "description": "",
        "operationId": "search_snippets",
        "parameters": [
          {
            "description": "Keyword for searching, case-insensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be one of all, resource, struct, interface, function, enum, event, default is all",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnippetsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search snippets",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v1/snippets/{code_hash}": {
      "get": {
        "description": "",
        "operationId": "query_snippet",
        "parameters": [
          {
            "description": "Snippet code hash",
            "in": "path",
            "name": "code_hash",
            "required": true,
            "type": "string",
            "x-example": "40E0416B13BC53F23FCB96FBCAF9E477621952650ADB4D93C2688D22E76EE2A2"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnippetResp"
            }
          },
          "404": {
            "description": "Snippet not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query for specific snippet",
        "tags": [
          "Snippets"
        ]
      }
    },
    "/api/v1/snippets/{code_hash}/contracts": {
      "get": {
        "description": "",
        "operationId": "query_snippet_contracts",
        "parameters": [
          {
            "description": "Snippet code hash",
            "in": "path",
            "name": "code_hash",
            "required": true,
            "type": "string",
            "x-example": "40E0416B13BC53F23FCB96FBCAF9E477621952650ADB4D93C2688D22E76EE2A2"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "404": {
            "description": "Snippet not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query the contracts using specific snippet",
        "tags": [
          "Snippets"
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "description": "",
        "operationId": "get_network_status",
        "parameters": [
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatusResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Network status",
        "tags": [
          "Status"
        ]
      }
    },
    "/api/v2/contracts": {
      "get": {
        "description": "",
        "operationId": "query_contracts",
        "parameters": [
          {
            "description": "The owner of contracts",
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "string"
          },
          {
            "default": "inserted_at",
            "description": "Should be one of inserted_at, dependants_count, dependencies_count, default is inserted_at",
            "enum": [
              "inserted_at",
              "dependencies_count",
              "dependants_count"
            ],
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Ascend or descend",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "order_by_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query contracts",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v2/contracts/search": {
      "get": {
        "description": "",
        "operationId": "search_contract",
        "parameters": [
          {
            "description": "Keyword for searching, case-sensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search scope, should be \"code\" or \"uuid\" or \"uuid,code\". Default is \"uuid,code\". NOTE: Search in code is a bit slower than search in uuid",
            "in": "query",
            "name": "scope",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search contracts, order by dependants count desc",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v2/snippets/search": {
      "get": {
        "description": "",
        "operationId": "search_snippets",
        "parameters": [
          {
            "description": "Keyword for searching, case-insensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be one of all, resource, struct, interface, function, enum, event, default is all",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnippetsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search snippets",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v2/snippets/{code_hash}/contracts": {
      "get": {
        "description": "",
        "operationId": "query_snippet_contracts",
        "parameters": [
          {
            "description": "Snippet code hash",
            "in": "path",
            "name": "code_hash",
            "required": true,
            "type": "string",
            "x-example": "40E0416B13BC53F23FCB96FBCAF9E477621952650ADB4D93C2688D22E76EE2A2"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be greater than 0, default value is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The number of contracts, min: 1, max: 500, default: 200",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "404": {
            "description": "Snippet not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query the contracts using specific snippet",
        "tags": [
          "Snippets"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "description": "API Token must be provided via `Authorization: Bearer ` header",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "System status",
      "name": "Status"
    },
    {
      "description": "Search APIs",
      "name": "Search"
    },
    {
      "description": "Contract APIs",
      "name": "Contracts"
    },
    {
      "description": "Snippet APIs",
      "name": "Snippets"
    }
  ]
}