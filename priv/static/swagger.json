{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Contract": {
      "description": "A contract on the network",
      "example": {
        "address": "0x0b2a3299cc857e29",
        "code": "...",
        "dependants": [
          "A.c1e4f4f4c4257510.TopShotMarketV3"
        ],
        "dependencies": [
          "A.1d7e57aa55817448.MetadataViews"
        ],
        "name": "TopShot",
        "uuid": "A.0b2a3299cc857e29.TopShot"
      },
      "properties": {
        "address": {
          "description": "Contract address",
          "type": "string"
        },
        "code": {
          "description": "Contract code",
          "type": "string"
        },
        "dependants": {
          "description": "The uuids of contracts which import this contract",
          "type": "array"
        },
        "dependencies": {
          "description": "The uuids of contracts imported by this contract",
          "type": "array"
        },
        "name": {
          "description": "Contract name",
          "type": "string"
        },
        "uuid": {
          "description": "Contract uuid",
          "type": "string"
        }
      },
      "required": [
        "dependants",
        "dependencies",
        "code",
        "name",
        "address",
        "uuid"
      ],
      "title": "Contract",
      "type": "object"
    },
    "ContractResp": {
      "description": "Contract resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/Contract"
        }
      },
      "required": [
        "code"
      ],
      "title": "ContractResp",
      "type": "object"
    },
    "ErrorResp": {
      "example": {
        "code": 100,
        "message": "unsupported"
      },
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "message",
        "code"
      ],
      "type": "object"
    },
    "PartialContract": {
      "description": "Basic info of a contract on the network",
      "example": {
        "dependants_count": 10,
        "dependencies_count": 10,
        "uuid": "A.0b2a3299cc857e29.TopShot"
      },
      "properties": {
        "dependants_count": {
          "description": "The amount of contracts which import this contract",
          "type": "integer"
        },
        "dependencies_count": {
          "description": "The amount of contracts imported by this contract",
          "type": "integer"
        },
        "uuid": {
          "description": "Contract uuid",
          "type": "string"
        }
      },
      "required": [
        "dependants_count",
        "dependencies_count",
        "uuid"
      ],
      "type": "object"
    },
    "PartialContracts": {
      "description": "A collection of PartialContracts",
      "items": {
        "$ref": "#/definitions/PartialContract"
      },
      "title": "PartialContracts",
      "type": "array"
    },
    "PartialContractsResp": {
      "description": "PartialContracts resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/PartialContracts"
        }
      },
      "required": [
        "code"
      ],
      "title": "PartialContractsResp",
      "type": "object"
    },
    "Status": {
      "description": "Network status",
      "example": {
        "contract_amount": 2437,
        "last_sync_at": "2022-12-05T02:54:46",
        "network": "mainnet",
        "synced_height": 42168691
      },
      "properties": {
        "contract_amount": {
          "description": "Contracts amount synced",
          "type": "integer"
        },
        "last_sync_at": {
          "description": "Last time of contract syncing",
          "type": "datetime"
        },
        "network": {
          "description": "Network name",
          "type": "string"
        },
        "synced_height": {
          "description": "The block height synced",
          "type": "integer"
        }
      },
      "required": [
        "synced_height",
        "network",
        "last_sync_at",
        "contract_amount"
      ],
      "title": "Status",
      "type": "object"
    },
    "StatusResp": {
      "description": "Status resp",
      "properties": {
        "code": {
          "description": "status code",
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/Status"
        }
      },
      "required": [
        "code"
      ],
      "title": "StatusResp",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "contact": {
      "email": "lanford33@outlook.com",
      "name": "lanford33"
    },
    "description": "API Documentation for FlowContractSyncer",
    "termsOfService": "Open for public",
    "title": "FlowContractSyncer API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/contracts": {
      "get": {
        "description": "",
        "operationId": "query_contract",
        "parameters": [
          {
            "description": "Contract uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string",
            "x-example": "A.0b2a3299cc857e29.TopShot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Should sync the latest version from the blockchain before showing the contract",
            "in": "query",
            "name": "sync",
            "required": false,
            "type": "bool"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractResp"
            }
          },
          "404": {
            "description": "Contract not found",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Query for specific contract",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/api/v1/search": {
      "get": {
        "description": "",
        "operationId": "search_contract",
        "parameters": [
          {
            "description": "Keyword for searching, case-insensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search scope, should be \"code\" or \"uuid\" or \"uuid,code\". Default is \"uuid,code\". NOTE: Search in code is a bit slower than search in uuid",
            "in": "query",
            "name": "scope",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search contracts, order by dependants count desc",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v1/snippets/search": {
      "get": {
        "description": "",
        "operationId": "search_snippets",
        "parameters": [
          {
            "description": "Keyword for searching, case-insensitive",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string",
            "x-example": "topshot"
          },
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should be one of all, resource, struct, interface, function, enum, event",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartialContractsResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search snippets",
        "tags": [
          "Search"
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "description": "",
        "operationId": "get_network_status",
        "parameters": [
          {
            "description": "Flow network, default value is \"mainnet\"",
            "enum": [
              "mainnet"
            ],
            "in": "query",
            "name": "network",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StatusResp"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResp"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Network status",
        "tags": [
          "Status"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "description": "API Token must be provided via `Authorization: Bearer ` header",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Contract resources",
      "name": "Contracts"
    },
    {
      "description": "Search resources",
      "name": "Search"
    },
    {
      "description": "System status",
      "name": "Status"
    }
  ]
}